drop table if exists films, users, genre_film, genre, ratingMPA, like_film, friends;


create TABLE if not exists genre (
    id_genre INTEGER generated by default as identity not null primary key,
    name_genre VARCHAR(20) NOT NULL
);

create TABLE if not exists ratingMPA (
    id_ratingMPA INTEGER generated by default as identity not null primary key,
    name_MPA VARCHAR(20) Not null
);
create TABLE if not exists films (
    id INTEGER generated by default as identity not null primary key,
    duration INTEGER NOT NULL,
    name VARCHAR(150) NOT NULL,
    description VARCHAR(600) NOT NULL,
    rating INTEGER,
    release_date TIMESTAMP NOT NULL,
    id_ratingMPA INTEGER not null references ratingMPA (id_ratingMPA) on delete cascade on update cascade
);

create TABLE if not exists users (
    id INTEGER generated by default as identity not null primary key,
    name VARCHAR(100),
    email VARCHAR(100) NOT NULL,
    login VARCHAR(50) NOT NULL,
    birthday TIMESTAMP NOT NULL
);

create TABLE if not exists like_film (
    id_film INTEGER not null references films (id) on delete cascade on UPDATE cascade,
    id_user INTEGER not null references users (id) on delete cascade on UPDATE cascade,
    PRIMARY KEY (id_film, id_user)
);


create TABLE if not exists friends (
    id_user INTEGER not null references users (id) on delete cascade on update cascade,
    id_friend INTEGER not null references users (id) on delete cascade on update cascade,
    UNIQUE (id_user, id_friend)
);

create TABLE if not exists genre_film (
    id_film INTEGER not null references films (id) on delete cascade on update cascade,
    id_genre INTEGER not null references genre (id_genre) on delete cascade on update cascade,
    PRIMARY KEY (id_film, id_genre)
);

